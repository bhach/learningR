Importing Data:
===============

getwd()       #current working directory
setwd("new path")       #setting new directory as working directory

For importing from Github, paste the raw code in place of url.


How to Import a data using Base R:
=================================
BaseR imports files as dataframe but not tibble.
BaseR converts categorical characters as factors instead of characters.

read.csv()
read.table()


How to Import CSV:
------------------
In CSV, by default, the delimitter is ","
Parameters: file, header, sep, quote, dec, fill, comment.char
Add the file in your current working directory


->From Current Working Directory:
read.csv("file.csv",sep=",",stringsAsFactors=T)

->From Any Other Directory/URL:
read.csv("fullpath of csv file/URL")

->Reading a CSV File Separated by ";":
wines <- read.csv("c:/Users/Sreenu/Desktop/MLDataSets/winequality-red.csv",sep=";")



How to Import EXCEL:
--------------------
R can read and write the excel files using xlsx package.
read.xlsx() and read.xlsx2 functions are used to import the excel files.
read.xlsx2 is faster on big files compared to read.xlsx function.


install.packages("xlsx")
library("xlsx")


->withtout Sheet Index:
emp <- read.xlsx("c:/Users/Sreenu/Desktop/MLDataSets/emp10.xlsx")	#Error


->with sheet Index:
emp <- read.xlsx("c:/Users/Sreenu/Desktop/MLDataSets/emp10.xlsx", sheetIndex = 1)



How to Import Data using readr:
===============================

install.packages(readr)

Readr:
======
read_table   #white space seperated values-txt
read_csv     #comma seperated values-csv
read_csv2    #semiclon seperated values-csv
read_tsv     #tab delimiited seperated values-tsv
read_delim   $general text file, must define delimitter-txt


Readxl:
======
read_excel   #autodetect the format-xlsx/xls
read_xls     #orginal format-xls
read_xlsx    #new format-xlsx


How to import from a url/directory:
-----------------------------------
url <- "https://raw.githubusercontent.com/rafalab/dslabs/master/inst/extdata/murders.csv"
dat <- read_csv(url)
download.file(url, "murders.csv")      #use this line code to download a local copy


creating a temporary file and load into an object and erase the file keeping the object:
----------------------------------------------------------------------------------------
tmp_filename <- tempfile()
download.file(url,tmp_filename)
dat<-read_csv(tmp_filename)
file.remove(tmp_filename)


read_tsv():
-----------
a<-read_tsv("http://594442.youcanlearnit.net/inpatient.tsv")

read_delim():
-------------
a<-read_delim(file="http://594442.youcanlearnit.net/drugdeaths.txt",delim="^")

Reading CSV with delim function: use delim as ,

read_fwf():
-----------
Reading fixed width files
names<-c("Name","Title","Department","Salary")
lengths<-c(32,50,24,NA)

widths<-fwf_widths(lengths,names)
employees<-read_fwf("http://594442.youcanlearnit.net/chicaoemployess.txt",widths)


Data Extraction from XML:
=========================
Extensible Markup Language (XML) is a file format which shares the data on the world wide web. 
XML is similar to HTML it contains markup tags. 
We can extract XML files using the "XML" package.

install.packages("XML")
library(XML)


Reading XML File:
-----------------
emp_xml <- xmlParse("C:/Users/Sreenu/Desktop/MLDataSets/emp10.xml")
print(emp_xml)

# Exract the root node form the xml file.
emp_root <- xmlRoot(emp_xml)

# Extract the details of the first node
emp_root[1]

# Get the first element of the first node.
emp_root[[1]][[1]]

# Get the fifth element of the first node.
emp_root[[1]][[5]]

# Get the second element of the third node.
emp_root[[3]][[2]]

# Find number of nodes in the root.
emp_size <- xmlSize(emp_root)


XML to Data Frame:
------------------
For data analysis it is better to convert the xml file into a data frame.
We have to use xmlToDataFrame() function to convert into data frame.

emp_df <- xmlToDataFrame("C:/Users/Sreenu/Desktop/MLDataSets/emp10.xml")


Data Extraction from JSON:
==========================
JavaScript Object Notation files can read by using the rjson package.

install.packages("rjson")
library(rjson)

Read the JSON File:
-------------------
Read the JSON file by using fromJSON() function.
a <- fromJSON(file = "file_name.json")

JSON to Data Frame:
-------------------
For data analysis it is better to convert the JSON file to a data frame.
We have to use as.data.frame() function to convert into data frame.
b <- as.data.frame(a)


How to Import a data from PDF:
==============================
1. Add your pdf in the directory
2. Install and load pdftools and tidyverse
3. Add your pdf into your project
PDF <- pdf_text("oregon_grass_and_legume_seed_crops_preliminary_estimates_2017.pdf") %>%
  readr::read_lines()
  

Import Data from Databases using RODBC package:
-----------------------------------------------

Import Data from APIs:
----------------------



