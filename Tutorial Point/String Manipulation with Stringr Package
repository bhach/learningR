String Manipulation with Stringr Package:
=========================================
Stringr package provide a cohesive set of functions designed to make working with strings as easy as possible.

phrase <- "I love to work with strings"
cities <- c("Chicago", "San Francisco", "Miami")
Rise <- "   Rise Academy   "
string1 <- "What is"
string2 <- "your name ?"


#length
str_length(phrase)


#count
str_count(cities)


#pattern
str_detect(phrase, "ot")
str_detect(phrase, "ov")


#trim
str_trim(Rise)


#concatenate
str_c(string1, string2, sep = " ")
str_c(string1, string2, sep = ".")
str_c(string1, string2, sep = "")


#order
str_order(cities)


#sort
str_sort(cities)


#replace
str_replace(phrase, "o", "i")
str_replace_all(phrase, "o", "i")


#split
str_split(phrase, "to")

#pattern locate
str_locate(string, pattern)


#Identify US Mobile Numbers from the strings
strings <- c(
"310 733 8965",
"310-292-8753",
"Work: 310-499-7527; Home: 310.355.3679/310-880-4789",
"3109185662")

phone<-"([2-9][0-9]{2})[. -]*([0-9]{3})[. -]*([0-9]{4})



str_locate(strings, phone)
str_locate_all(strings, phone)
str_extract(strings,phone)
str_extract_all(strings,phone)
str_extract(strings,phone,simplify=T)
str_extract_all(strings,phone,simplify=T)
str_match(strings,phone)
str_match_all(strings,phone)
str_replace(strings,phone,"XXX-XXX-XXXX")
str_replace_all(strings,phone,"XXX-XXX-XXXX")



#Email Addressses
email<-c(
"bhask@hotmail.com",
"lidia@gmail.com",
"nirmal@ntv.com",
"abhi@jih.in",
"raghav@hik.te"
)

pattern<-"@"


str_split(email,pattern)
str_split(email,pattern,simplify=T)


Next, we are going to use the built-in `words` vector to create a data frame and illustrate regular expression functionalities.   We have already utilized exact matches.    Here are some other options:

* `\d`: matches any digit
* `\s`: matches any whitespace
* `[abc]`: matches a, b, or c
* `[^abc]`: matches anything except a, b, or c
* `[a|b]`: matches a or b

words<-"Hi, everyone. We are learning regex functions in stringr package."
Install.packages("tidyverse")
df <- tibble(word = words)


Use str_count() to get regular expression matches
a<-df %>%
  mutate(
    vowels = str_count(word, "[aeiou]"),
    consonants = str_count(word, "[^aeiou]"),
    a_or_c = str_count(word, "[a|c]")
  )
class(a)


Return words that start with "y"}
df %>%
  dplyr::filter(str_detect(words, "^y"))
  

Return words that start with vowels
df %>%
  dplyr::filter(str_detect(word, "^[aeiou]"))
  
  
Return words that do not contain vowels
df %>%
  dplyr::filter(!str_detect(word, "[aeiou]"))












